[
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Device",
  "modified": "2020-12-02 19:11:07.391654",
  "name": "Device-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Device', {\n  setup (frm) {\n    frm.set_query(\"detected_by\", function() {\n      return {\n       filters: [\n         [\"Device\",\"is_scanner\", \"=\", 1]\n       ]\n      };\n    });  \n  },    \n  onload(frm) {\n    // your code here\n    show_image(frm);\n  },\n  media_library (frm) {\n    show_image(frm);  \n  },\n  is_located (frm) {\n    if (frm.doc.is_located === 0) {\n      frm.doc.rssi = null;\n      frm.doc.training_place = null;\n      frm.doc.detected_by = null;\n    }      \n  }\n});\nfunction show_image (frm) {\n  if (frm.doc.media_library) {\n    frappe.call({\n      method: 'atvirtual.atvirtual.custom.get_image',\n        args: {\n\t      slide: frm.doc.media_library\n        },\n        callback: (r) => {\n          //console.log(r.message);\n          if (r.message.length >0) {\n            var rtemplate = \"\";\n            console.log(r.message);\n            for (var j in r.message) {\n              //rtemplate += '<a href=\"' + r.message[j].image + '\" target=\"_blank\"><img style=\"border: 1px solid #4682b4; float: left; margin: 1px; padding: 1px;\" height=\"120px\" src=\"' + r.message[j].image + '\" /></a>';  \n              rtemplate += '<div class=\"card\"><a class=\"card-text\" href=\"' + r.message[j].image + '\" target=\"_blank\"><img style=\"border: 1px solid #4682b4; border-radius: 9px; float: left; margin: 1px; padding: 1px;\" height=\"120px\" title=\"' + r.message[j].heading + '\" src=\"' + r.message[j].image + '\" /></a></div>'; \n            }\n            //var template = '<div class=\"container-fluid\"><h4>' + frm.doc.media_library + '</h4>' + rtemplate + '</div>';\n            var template = '<div class=\"container-fluid\"><h4>' + frm.doc.media_library + '</h4><div class=\"card-columns\">' + rtemplate + '</div></div>';\n            //console.log(template);\n            frm.set_df_property('html_image', 'options', frappe.render_template(template));\n            frm.refresh_field('html_image');\n          }\n        }\n    });    \n  } else {\n    //console.log(frm.doc.media_library);\n    var noimage = '<div class=\"container-fluid\"><h4>No Image Gallery</h4></div>';\n    frm.set_df_property('html_image', 'options', frappe.render_template(noimage));\n    frm.refresh_field('html_image');\n  }\n}"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Training Course",
  "modified": "2021-03-14 18:04:00.475469",
  "name": "Training Course-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Training Course', {\n    setup(frm) {\n      //frm.set_query(\"device\", \"items\", function() {\n        //return {\n        //  \"filters\": [[\"Device\", \"is_scanner\", \"=\", 1]]\n        //};\n      //});\n      frm.fields_dict['items'].grid.get_field('device').get_query = function(doc, cdt, cdn) {\n\t\t//var child = locals[cdt][cdn];\n\t\t//console.log(child);\n\t\treturn {\t\n\t\t  filters:[\n\t\t    ['is_scanner', '=', 1]\n\t\t  ]\n\t\t};\n\t  };\n\t  frm.fields_dict['participants'].grid.get_field('participant_role').get_query = function(doc, cdt, cdn) {\n\t\t//var child = locals[cdt][cdn];\n\t\t//console.log(child);\n\t\treturn {\t\n\t\t  filters:[\n\t\t    ['is_group', '=', 0], ['session_type', '=', frm.doc.training_type]\n\t\t  ]\n\t\t};\n\t  };\n\t  frm.fields_dict['participants'].grid.get_field('device').get_query = function(doc, cdt, cdn) {\n\t\t//var child = locals[cdt][cdn];\n\t\t//console.log(child);\n\t\treturn {\t\n\t\t  filters:[\n\t\t    ['is_scanner', '=', 0]\n\t\t  ]\n\t\t};\n\t  };\n\t  frm.fields_dict['participants'].grid.get_field('participant').get_query = function(doc, cdt, cdn) {\n\t\t//var child = locals[cdt][cdn];\n\t\t//console.log(child);\n\t\treturn {\t\n\t\t  filters:[\n\t\t    ['session_type', '=', frm.doc.training_type]\n\t\t  ]\n\t\t};\n\t  };\n    },\n    onload(frm) {\n\t  // your code here\n\t  var template = '';\n\t  if (frm.doc.route && frm.doc.published) {\n\t    template = '<h4><a style=\"color: #4682b4; font-size: 10pt;\" href=\"' + frm.doc.route + '\">' + frm.doc.title + '</a></h4>';\n\t    frm.set_df_property('html_route', 'options', frappe.render_template(template));\n        frm.refresh_field('html_route');\n\t  }\n\t},\n\trefresh (frm) {\n\t  //frm.add_custom_button(__(\"to Training Session\"), function() {\n      //  frappe.msgprint(\"Here the code for Groupal Message\");\n      //}, __(\"iMessages\"));\n      var template = '';\n\t  if (frm.doc.route && frm.doc.published && !frm.doc.__islocal) {\n\t    template = '<h4><a style=\"color: #4682b4; font-size: 10pt;\" href=\"' + frm.doc.route + '\">' + frm.doc.title + '</a></h4>';\n\t    frm.set_df_property('html_route', 'options', frappe.render_template(template));\n        frm.refresh_field('html_route');\n\t  }\n\t}\n});\nfrappe.ui.form.on('Place Item', {\n  // cdt is Child DocType name i.e Time Logs\n  // cdn is the row name for e.g bbfcb8da6a\n  place (frm, cdt, cdn) {\n    let row = frappe.get_doc(cdt, cdn);\n    var arr = frm.doc.items;\n    var idx = arr.findIndex(item=>item.place === row.place);\n    var len = arr.length;\n    if (idx < 0 || idx === (+len - 1)) {\n      //console.log(idx);\n    } else {\n      frm.doc.items.splice([+len-1], 1);\n      frm.refresh_field('items');    \n      frappe.msgprint({\n        title: __('Notification'),\n        message: __('Item duplicated with row ' + (+idx + 1)),\n        action() {\n          //location.reload();\n          return(false);\n        }\n      });\n    }\n  },\n  device (frm, cdt, cdn) {\n    let row = frappe.get_doc(cdt, cdn);\n    if (row.device) {\n      var arr = frm.doc.items;\n      var idx = arr.findIndex(item=>item.device === row.device);\n      var len = arr.length;\n      if (idx < 0 || idx === (+len - 1)) {\n        //console.log(idx);\n      } else {\n        frm.doc.items.splice([+len-1], 1);\n        frm.refresh_field('items');    \n        frappe.msgprint({\n          title: __('Notification'),\n          message: __('Item duplicated with row ' + (+idx + 1)),\n          action() {\n            //location.reload();\n            return(false);\n          }\n        });\n      }\n      frappe.call({\n        method: 'atvirtual.atvirtual.custom.get_place_from_device',\n        args: {\n\t      device: row.device\n        },\n        callback: (r) => {\n          //console.log(r.message);\n          if (r.message.length > 0) {\n            frm.doc.items.splice([+len-1], 1);\n            frm.refresh_field('items');    \n            frappe.msgprint({\n              title: __('Notification'),\n              message: __('Item already assigned to ' + (r.message[0].name)),\n              action() {\n                //location.reload();\n                return(false);\n              }  \n            });\n          }\n        }\n      });\n    }\n  }  \n});\nfrappe.ui.form.on('Session Role Item', {\n  // cdt is Child DocType name i.e Time Logs\n  // cdn is the row name for e.g bbfcb8da6a\n  device (frm, cdt, cdn) {\n    let row = frappe.get_doc(cdt, cdn);\n    if (row.device) {\n      var arr = frm.doc.participants;\n      var idx = arr.findIndex(item=>item.device === row.device);\n      var len = arr.length;\n      if (idx < 0 || idx === (+len - 1)) {\n        //console.log(idx);\n      } else {\n        frm.doc.participants.splice([+len-1], 1);\n        frm.refresh_field('participants');    \n        frappe.msgprint({\n          title: __('Notificacion'),\n          message: __('Item duplicado con la fila ' + (+idx + 1)),\n          action() {\n            //location.reload();\n            return(false);\n          }\n        });\n      }\n      frappe.call({\n        method: 'atvirtual.atvirtual.custom.get_course_from_device',\n        args: {\n\t      device: row.device\n        },\n        callback: (r) => {\n          //console.log(r.message);\n          if (r.message.length > 0) {\n            frm.doc.participants.splice([+len-1], 1);\n            frm.refresh_field('participants');    \n            frappe.msgprint({\n              title: __('Notification'),\n              message: __('Item already assigned to ' + (r.message[0].parent)),\n              action() {\n                //location.reload();\n                return(false);\n              }  \n            });\n          }\n        }\n      });    \n    }\n  },\n  participant_role (frm, cdt, cdn) {\n    let row = frappe.get_doc(cdt, cdn);\n    var arr = frm.doc.participants;\n    var len = arr.length;\n    if (!frm.doc.training_type) {\n      frm.doc.participants.splice([+len-1], 1);\n      frm.refresh_field('participants');    \n      frappe.msgprint({\n        title: __('Notification'),\n        message: __('First Select the Session Type'),\n        action() {\n          //location.reload();\n          return(false);\n        }  \n      });  \n    }\n  }\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "pibiMessage",
  "modified": "2021-03-15 12:36:46.572868",
  "name": "pibiMessage-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('pibiMessage', {\n  setup (frm) {\n    if (frm.doc.course && frm.doc.session_type) {\n      frm.set_query(\"participant_role\", function() {\n        return {\n          \"filters\": [[\"Participant Role\", \"session_type\", \"=\", frm.doc.session_type]]\n        };\n      });\n    }\n    frm.fields_dict['recipient_item'].grid.get_field('participant').get_query = function(doc, cdt, cdn) {\n\t  //var child = locals[cdt][cdn];\n\t  //console.log(child);\n\t  return {\t\n\t    filters:[\n\t      ['session_type', '=', frm.doc.session_type]\n\t    ]\n\t  };\n\t};\n  },\n  course (frm) {\n    if (frm.doc.course && frm.doc.session_type) {\n      frm.set_query(\"participant_role\", function() {\n        return {\n          \"filters\": [[\"Participant Role\", \"session_type\", \"=\", frm.doc.session_type]]\n        };\n      });\n    }\n  },\n  participant_role (frm) {\n    json_string(frm);  \n  },\n  device (frm) {\n    json_string(frm);  \n  },\n  message_type(frm) {\n    if (frm.doc.message_type === \"E-mail\") {\n      frm.set_df_property('participant_role', 'reqd', 0);\n      //frm.refresh_field('participant_role');\n    }\n  },\n  std_message(frm) {\n    frm.doc.text2send = null;\n  },\n  text2send (frm) {\n    json_string(frm);  \n  },\n  refresh (frm) {\n    json_string(frm);  \n  }\n});\nfunction json_string (frm) {\n  var json_message = '';\n  if (frm.doc.message_type == \"Text\") {\n    var type = '';\n    if (frm.doc.text2send !== '') {\n      if (frm.doc.device && frm.doc.participant_role !== '') {\n        type = \"device\";\n      }\n      if (frm.doc.participant_role !== '' && !frm.doc.device) {\n        type = \"role\";\n      }\n      if (frm.doc.course !== '' && frm.doc.is_group) {\n        type = \"session\";  \n      }\n      json_message = '{\"type\":\"' + type +\n\t    '\",\"is_command\":0' +\n\t    ',\"message\":\"' + frm.doc.text2send.replace(',','') +\n\t    '\",\"order\":\"\"}';\n      frm.doc.message_text = json_message;\n      //console.log(json_message);\n    }\n    frm.refresh_field('message_text');\n  }    \n}"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Training Place",
  "modified": "2021-03-12 12:46:55.263222",
  "name": "Training Place-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Training Place', {\n  setup (frm) {\n    // your code here  \n  },    \n  onload(frm) {\n    show_image(frm);\n  },\n  media_library (frm) {\n    show_image(frm);  \n  }\n});\nfunction show_image (frm) {\n  if (frm.doc.media_library) {\n    frappe.call({\n      method: 'atvirtual.atvirtual.custom.get_image',\n        args: {\n\t      slide: frm.doc.media_library\n        },\n        callback: (r) => {\n          //console.log(r.message);\n          if (r.message.length >0) {\n            var rtemplate = \"\";\n            console.log(r.message);\n            for (var j in r.message) {\n              //rtemplate += '<a href=\"' + r.message[j].image + '\" target=\"_blank\"><img style=\"border: 1px solid #4682b4; float: left; margin: 1px; padding: 1px;\" height=\"120px\" src=\"' + r.message[j].image + '\" /></a>';  \n              rtemplate += '<div class=\"card\"><a class=\"card-text\" href=\"' + r.message[j].image + '\" target=\"_blank\"><img style=\"border: 1px solid #4682b4; border-radius: 9px; float: left; margin: 1px; padding: 1px;\" height=\"120px\" title=\"' + r.message[j].heading + '\" src=\"' + r.message[j].image + '\" /></a></div>'; \n            }\n            //var template = '<div class=\"container-fluid\"><h4>' + frm.doc.media_library + '</h4>' + rtemplate + '</div>';\n            var template = '<div class=\"container-fluid\"><h4>' + frm.doc.media_library + '</h4><div class=\"card-columns\">' + rtemplate + '</div></div>';\n            //console.log(template);\n            frm.set_df_property('html_image', 'options', frappe.render_template(template));\n            frm.refresh_field('html_image');\n          }\n        }\n    });    \n  } else {\n    //console.log(frm.doc.media_library);\n    var noimage = '<div class=\"container-fluid\"><h4>Sin Imagenes Disponibles</h4></div>';\n    frm.set_df_property('html_image', 'options', frappe.render_template(noimage));\n    frm.refresh_field('html_image');\n  }\n}"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Standard Message",
  "modified": "2021-03-15 10:22:03.074349",
  "name": "Standard Message-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Standard Message', {\n\trefresh(frm) {\n\t  // your code here\n\t  json_string(frm);\n\t},\n\tstd_message(frm) {\n\t  json_string(frm);    \n\t},\n\ttype(frm) {\n\t  json_string(frm);    \n\t}\n});\nfunction json_string (frm) {\n  var json_message = '';\n  var order = '';\n  if (frm.doc.std_message !== '' && frm.doc.type !== '') {\n    if (frm.doc.order) {\n\t  order = frm.doc.order;\n\t}\n\tjson_message = '{\"type\":\"' + frm.doc.type.toLowerCase() +\n\t  '\",\"is_command\":' + frm.doc.is_command +\n\t  ',\"message\":\"' + frm.doc.std_message.replace(',','') +\n\t  '\",\"order\":\"'  + order + '\"}';\n\t  frm.doc.json_message = json_message;\n    //console.log(json_message);\n  }\n  frm.refresh_field('json_message');\n}"
 }
]